version: 2

deployment:
  staging:
    branch: master
    heroku:
      appname: clt-devs-signup
database:
  override:
    # replace CircleCI's generated database.yml
    - cp config/database.yml.ci config/database.yml
    - bundle exec rake db:create db:schema:load
jobs:
  build:
    parallelism: 3
    working_directory: ~/circleci-la-fproject
    machine:
      ruby:
        version: ruby 2.4.2p198
    # docker:
    #   - image: circleci/ruby:2.4-node
    #     environment:
    #       PGHOST: 127.0.0.1
    #       PGUSER: circleci-demo-ruby
    #       RAILS_ENV: test
    #   - image: circleci/postgres:9.5-alpine
    #     environment:
    #       POSTGRES_USER: la-fproject_production
    #       POSTGRES_DB: la-fproject
    #       POSTGRES_PASSWORD: <%= ENV['LA-FPROJECT_DATABASE_PASSWORD'] %>

    steps:
      - checkout

      # Restore bundle cache
      - type: cache-restore
        name: Restore bundle cache
        key: rails-demo-bundle-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle

      # Store bundle cache
      - type: cache-save
        name: Store bundle cache
        key: rails-demo-bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      # - type: cache-restore
      #   name: Restore yarn cache
      #   key: rails-demo-yarn-{{ checksum "yarn.lock" }}
      #
      # - run:
      #     name: Yarn Install
      #     command: yarn install
      #
      # # Store yarn / webpacker cache
      # - type: cache-save
      #   name: Store yarn cache
      #   key: rails-demo-yarn-{{ checksum "yarn.lock" }}
      #   paths:
      #     - ~/.yarn-cache
      #
      # - run:
      #     name: Wait for DB
      #     command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)


      # Save test results for timing analysis
      - store_test_results:
          path: test_results
